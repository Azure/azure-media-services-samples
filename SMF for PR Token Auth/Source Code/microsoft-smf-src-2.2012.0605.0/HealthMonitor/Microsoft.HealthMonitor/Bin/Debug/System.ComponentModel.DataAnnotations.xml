<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel.DataAnnotations</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.DataAnnotations.AssociationAttribute">
      <summary>Specifies that an entity member represents a data relationship, such as a foreign key relationship. </summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.AssociationAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.AssociationAttribute" /> class. </summary>
      <param name="name">The name of the association. For bidirectional associations, the name must be the same on both sides of the association.</param>
      <param name="thisKey">A comma-separated list of the property names of the key values on this side of the association.</param>
      <param name="otherKey">A comma-separated list of the property names of the key values on the other side of the association.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.IsForeignKey">
      <summary>Gets or sets the member as the foreign key in an association that represents a data relationship.</summary>
      <returns>true if the member is a foreign key in a data relationship; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.Name">
      <summary>Gets the name used to identify the association. </summary>
      <returns>The name of the association.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey">
      <summary>Gets a comma-separated list of the property names of the key values on the other side of the association.</summary>
      <returns>A comma-separated list of property names of the key values on the other side of the association.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKeyMembers">
      <summary>Gets the collection of individual key values specified in the <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.OtherKey" /> property.</summary>
      <returns>A collection of key values for the other side of the association. </returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey">
      <summary>Gets a comma-separated list of property names of the key values on this side of the association.</summary>
      <returns>A comma-separated list of property names of the key values on this side of the association.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKeyMembers">
      <summary>Gets the collection of individual key values specified in the <see cref="P:System.ComponentModel.DataAnnotations.AssociationAttribute.ThisKey" /> property.</summary>
      <returns>A collection of key values for this side of the association.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute">
      <summary>Designates that a property participates in optimistic concurrency checks.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute" /> class. </summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute">
      <summary>Designates a customized method to execute to validate the entity member.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.CustomValidationAttribute" /> class. </summary>
      <param name="validatorType">The type that contains the method to invoke when validating the member. </param>
      <param name="method">The name of the method to invoke when validating the member.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.CustomValidationAttribute.FormatErrorMessage(System.String)">
      <summary>Applies formatting to an error message based on the data field where the error occurred.</summary>
      <returns>The formatted error message.</returns>
      <param name="name">The name to include in the formatted string which is the typically the value of the <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName" /> property.</param>
      <exception cref="T:System.InvalidOperationException">The attribute is not well-formed.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method">
      <summary>Gets the name of the method to invoke for validation.</summary>
      <returns>The name of the method to invoke for validation.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.ValidatorType">
      <summary>Gets the type that contains the method for validating the member.</summary>
      <returns>The type that contains the method specified in the <see cref="P:System.ComponentModel.DataAnnotations.CustomValidationAttribute.Method" /> property.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataType">
      <summary>Represents data types that are associated with data properties.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Custom">
      <summary>Represents a data type that is not one of the known types. </summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.DateTime">
      <summary>Represents an instant in time, expressed as a date and time of day.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Date">
      <summary>Represents a data value.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Time">
      <summary>Represents a time value.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Duration">
      <summary>Represents a continuous time during which an object exists.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.PhoneNumber">
      <summary>Represents a phone number value.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Currency">
      <summary>Represents a currency value.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Text">
      <summary>Represents text that is displayed.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Html">
      <summary>Represents an HTML file.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.MultilineText">
      <summary>Represents multiline text.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.EmailAddress">
      <summary>Represents an e-mail address.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Password">
      <summary>Represents a password value.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.Url">
      <summary>Represents a URL value.</summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.DataType.ImageUrl">
      <summary>Represents a URL value that is displayed as an image instead of text.</summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DataTypeAttribute">
      <summary>Specifies the name of an additional type to associate with an entity member.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> class with the specified data type enumeration. </summary>
      <param name="dataType">The type of data object to associate with the member.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> class with the specified name of a customized data type. </summary>
      <param name="customDataType">The name of a customized data type to associate with the member.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType">
      <summary>Gets a string that represents the name of the customized data type to associate with the member.</summary>
      <returns>The name of the customized data type to associate with the member.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType">
      <summary>Gets the type of the data object to associate with the member.</summary>
      <returns>The type of the data object to associate with the member.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat">
      <summary>Gets the object that represents the format of the data type.</summary>
      <returns>The object that represents the format of the data type.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName">
      <summary>Retrieves the name of the data type that is associated with the member.</summary>
      <returns>The value of the <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType" /> property if the <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType" /> property is set to <see cref="F:System.ComponentModel.DataAnnotations.DataType.Custom" />; otherwise, the name of the value in the <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType" /> property.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType" /> is set to <see cref="F:System.ComponentModel.DataAnnotations.DataType.Custom" />, but <see cref="P:System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType" /> does not contain a value.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayAttribute">
      <summary>Specifies localizable strings for entity types and members that are used in the user interface.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute" /> class. </summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField">
      <summary>Gets or sets a value that indicates whether the field is automatically displayed in the user interface.</summary>
      <returns>true if the field is automatically displayed in the user interface; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The property does not contain a value when trying to retrieve the value.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter">
      <summary>Gets or sets a value that indicates whether filtering is automatically displayed for this field.</summary>
      <returns>true if filtering is automatically displayed; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The property does not contain a value when trying to retrieve the value.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description">
      <summary>Gets or sets either a resource name or non-localized text, such as a tool tip, that is displayed to users to help them understand a member.</summary>
      <returns>Either a resource name or the non-localized text to display to users to help them understand a member. The resource name is used with the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> property to retrieve localized text to display to users to help them understand a member.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateField">
      <summary>Retrieves the value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" /> property.</summary>
      <returns>The value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateField" /> property when the property has been set, or null if the property has not been set.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetAutoGenerateFilter">
      <summary>Retrieves the value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter" /> property.</summary>
      <returns>The value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.AutoGenerateFilter" /> property if the property has been set, or null if the property has not been set.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetDescription">
      <summary>Retrieves the localized or non-localized value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> property.</summary>
      <returns>The localized value for the description when the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> property is specified and the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> property represents a resource name; otherwise, the non-localized value specified in the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Description" /> property.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetGroupName">
      <summary>Retrieves the localized or non-localized value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> property.</summary>
      <returns>The localized value for the group name when the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> property is specified and the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> property represents a resource name; otherwise, the non-localized value specified in the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName" /> property.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetName">
      <summary>Retrieves the localized or non-localized value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> property.</summary>
      <returns>The localized value for the group name when the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> property is specified and the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> property represents a resource name; otherwise, the non-localized value specified in the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name" /> property.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetOrder">
      <summary>Retrieves the value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> property.</summary>
      <returns>The value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> property if the property is set, or null if the property is not set.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetPrompt">
      <summary>Retrieves the localized or non-localized value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> property.</summary>
      <returns>The localized value for the group name when the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> property is specified and the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> property represents a resource name; otherwise, the non-localized value specified in the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt" /> property.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayAttribute.GetShortName">
      <summary>Retrieves the localized or non-localized value of the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> property.</summary>
      <returns>The localized value for the group name when the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> property is specified and the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> property represents a resource name; otherwise, the non-localized value specified in the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName" /> property.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.GroupName">
      <summary>Gets or sets either a resource name or non-localized text that is displayed to users when grouping fields in the user interface.</summary>
      <returns>Either a resource name or the non-localized text that is displayed to users when grouping fields in the user interface. The resource name is used with the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> property to retrieve localized text that is displayed to users when grouping fields in the user interface.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name">
      <summary>Gets or sets either a resource name or non-localized text that is used as a member label for elements that are bound to the member.</summary>
      <returns>Either a resource name or the non-localized text that is used as a member label for elements that are bound to the member. The resource name is used with the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> property to retrieve localized text that is used as a member label for elements that are bound to the member.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order">
      <summary>Gets or sets a value that indicates the order in which columns are sorted.</summary>
      <returns>A value that indicates the order in which columns are sorted.</returns>
      <exception cref="T:System.InvalidOperationException">The get accessor is called when the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Order" /> property has not been set.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Prompt">
      <summary>Gets or sets either a resource name or non-localized text, such as a watermark, that suggests a user action for an element that is bound to the member.</summary>
      <returns>Either a resource name or the non-localized text that suggests a user action for an element that is bound to the member. The resource name is used with the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType" /> property to retrieve localized text that suggests a user action for an element that is bound to the member.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ResourceType">
      <summary>Gets or sets the type that contains the resources for other localizable property values.</summary>
      <returns>The type that contains the resources for other localizable property values.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayAttribute.ShortName">
      <summary>Gets or sets either a resource name or non-localized text that is used as the column label for an element that is bound to the member.</summary>
      <returns>Either a resource name or the non-localized text that is used as the column label for an element that is bound to the member.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute">
      <summary>Designates the property to display, the property to use for sorting, and the sort order when a table is used as a parent table in a foreign key relationship.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> class with the specified column to display. </summary>
      <param name="displayColumn">The name of the column to display.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> class with the specified display column and the specified sort column. </summary>
      <param name="displayColumn">The name of the column to display.</param>
      <param name="sortColumn">The name of the column to use for sorting.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DisplayColumnAttribute" /> class with the specified display column, sort column, and sort order. </summary>
      <param name="displayColumn">The name of the column to display.</param>
      <param name="sortColumn">The name of the column to use for sorting.</param>
      <param name="sortDescending">true to sort in descending order; otherwise, false.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.DisplayColumn">
      <summary>Gets the name of the column to the display.</summary>
      <returns>The name of the column to display.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortColumn">
      <summary>Gets the name of the column to use for sorting.</summary>
      <returns>The name of the column to use for sorting.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayColumnAttribute.SortDescending">
      <summary>Gets a value that indicates whether the data is sorted in descending order.</summary>
      <returns>true if the data is sorted in descending order; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
      <summary>Specifies how data fields are displayed and formatted.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" /> class. </summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode">
      <summary>Gets or sets a value that indicates whether the formatting string that is specified in the <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> property is applied to the member when in edit mode.</summary>
      <returns>true if the formatting string that is specified in the <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> property is applied to the member when in edit mode; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull">
      <summary>Gets or sets a value that indicates whether empty string values ("") are automatically converted to null.</summary>
      <returns>true if empty string values are automatically converted to null; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString">
      <summary>Gets or sets the string value that specifies how to display values for the member.</summary>
      <returns>The string value that specifies how to display values for the member.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText">
      <summary>Gets or sets the text to display for a member when the value of the member is null.</summary>
      <returns>The text to display for a member when the value of the member is null.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EditableAttribute">
      <summary>Specifies whether users should be able to change the value of the entity property.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EditableAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute" /> class. </summary>
      <param name="allowEdit">The value that indicates whether users should be able to change the existing value of the property and set a value when inserting a new record.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit">
      <summary>Gets a value that indicates whether a client application should allow users to change the value of the property.</summary>
      <returns>true if users should be able to change the value of the property; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowInitialValue">
      <summary>Gets or sets a value that indicates whether users should be able to set a value for the property when adding a new record in the data set.</summary>
      <returns>true if users should be able to set the value; otherwise, false. The default value is the value you set for the <see cref="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit" /> property.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute">
      <summary>Specifies that an entity member corresponds to an enumeration type. </summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" /> class. </summary>
      <param name="enumType">The enumeration type to associate with the entity member.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.EnumType">
      <summary>Gets the enumeration type associated with the entity member.</summary>
      <returns>The enumeration type for the entity member.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute">
      <summary>Designates the filtering behavior for a column.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> class with the specified control to use for filtering. </summary>
      <param name="filterUIHint">The control to use for filtering.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> class with the specified control to use for filtering and the presentation layer. </summary>
      <param name="filterUIHint">The control to use for filtering.</param>
      <param name="presentationLayer">The name of the presentation layer that supports the control.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> class with the specified control to use for filtering, the presentation layer, and the collection of parameters to use when creating an instance of the control.</summary>
      <param name="filterUIHint">The control to use for filtering.</param>
      <param name="presentationLayer">The name of the presentation layer that supports the control.</param>
      <param name="controlParameters">The collection of parameters to use when creating an instance of the control.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.ControlParameters">
      <summary>Gets the collection of values to use when creating an instance of the control used for filtering.</summary>
      <returns>The collection of values to use when creating an instance of the filtering control.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance has the same value as the specified object.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.ComponentModel.DataAnnotations.FilterUIHintAttribute" /> object and its value is the same as this instance; otherwise, false.</returns>
      <param name="obj">The object to compare with this instance.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint">
      <summary>Gets the name of the control to use for filtering.</summary>
      <returns>The name of the control to use for filtering.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.PresentationLayer">
      <summary>Gets the name of the presentation layer that supports the filtering control type.</summary>
      <returns>The name of the presentation layer that supports the filtering control type.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.KeyAttribute">
      <summary>Specifies one or more entity properties to use as the unique identity for the entity.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.KeyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute" /> class. </summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RangeAttribute">
      <summary>Designates the minimum and maximum constraints for the associated member.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> class with specified double values as the minimum and maximum limits. </summary>
      <param name="minimum">The minimum value.</param>
      <param name="maximum">The maximum value.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> class with specified integer values as the minimum and maximum limits.</summary>
      <param name="minimum">The minimum value.</param>
      <param name="maximum">The maximum value.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Type,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" /> class with the specified minimum and maximum values converted to the specified type.</summary>
      <param name="type">The type of <paramref name="minimum" /> and <paramref name="maximum" />. The type must implement the <see cref="T:System.IComparable" /> interface.</param>
      <param name="minimum">The minimum value.</param>
      <param name="maximum">The maximum value.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.FormatErrorMessage(System.String)">
      <summary>Applies formatting to an error message based on the data field where the error occurred.</summary>
      <returns>The formatted error message.</returns>
      <param name="name">The name to include in the formatted string.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum" /> is null.-or-<see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum" /> is null.-or-<see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType" /> does not implement the <see cref="T:System.IComparable" /> interface.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum">
      <summary>Gets the maximum allowed value for the range.</summary>
      <returns>The maximum allowed value for the range.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum">
      <summary>Gets the minimum allowed value for the range.</summary>
      <returns>The minimum allowed value for the range.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.OperandType">
      <summary>Gets the type of the <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum" /> and <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum" /> values.</summary>
      <returns>The type of the <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum" /> and <see cref="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum" /> values.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
      <summary>Designates a regular expression to use for validation of the associated member. </summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> class. </summary>
      <param name="pattern">The regular expression to use for validation.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
      <summary>Applies formatting to an error message based on the data field where the error occurred.</summary>
      <returns>The formatted error message.</returns>
      <param name="name">The name to include in the formatted string.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> does not contain a valid regular expression.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
      <summary>Gets the regular expression to use for validation of the associated member.</summary>
      <returns>The regular expression to use for validation of the associated member.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.RequiredAttribute">
      <summary>Specifies that a value must be provided for a property. </summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> class. </summary>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.RequiredAttribute.AllowEmptyStrings">
      <summary>Gets or sets a value that indicates whether an empty string is allowed.</summary>
      <returns>true if an empty string is allowed; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.StringLengthAttribute">
      <summary>Specifies the maximum and minimum number of characters that are allowed for an entity member.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> class. </summary>
      <param name="maximumLength">The maximum length of a string.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.StringLengthAttribute.FormatErrorMessage(System.String)">
      <summary>Applies formatting to an error message that is displayed when the string value is not within the specified length.</summary>
      <returns>The formatted error message.</returns>
      <param name="name">The name to include in the formatted error message.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength" /> is less than zero.-or-<see cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength" /> is less than <see cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength" />.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength">
      <summary>Gets the maximum length of a string.</summary>
      <returns>The maximum length of the input string.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MinimumLength">
      <summary>Gets or sets the minimum length of a string.</summary>
      <returns>The minimum length of the input string. The default value is 0.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.TimestampAttribute">
      <summary>Designates a member as a time stamp value. </summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.TimestampAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute" /> class. </summary>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
      <summary>Designates the control and values to use to display the associated entity member.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> class with the specified name of the control to use to display the member. </summary>
      <param name="uiHint">The name of the control to use to display the member.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> class with the specified name of the control to use to display the member and the presentation layer for the control. </summary>
      <param name="uiHint">The name of the control to use to display the member.</param>
      <param name="presentationLayer">The name of the presentation layer that supports this control.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> class with the specified name of the control to use to display the member, the presentation layer for the control, and the parameters to use when creating an instance of the control.</summary>
      <param name="uiHint">The name of the control to use to display the member.</param>
      <param name="presentationLayer">The name of the presentation layer that supports this control.</param>
      <param name="controlParameters">The list of parameters to use when creating an instance of the control.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
      <summary>Gets a collection of values to use as parameters when creating an instance of the presentation control.</summary>
      <returns>A collection of values to use as parameters when creating an instance of the presentation control.</returns>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
      <summary>Returns a value that indicates whether this instance has the same value as the specified object.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> object and its value is the same as this instance; otherwise, false.</returns>
      <param name="obj">The object to compare with this instance.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode">
      <summary>Returns a hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
      <summary>Gets the name of the presentation layer that supports the control type in the <see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint" /> property.</summary>
      <returns>A value that represents the name of the presentation layer.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
      <summary>Gets the name of the control to use to display the associated member.</summary>
      <returns>The name of the control to use to display the associated member.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationAttribute">
      <summary>Serves as the base class for all validation attributes.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.Func{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> class with the specified function to retrieve the error message.</summary>
      <param name="errorMessageAccessor">A function to retrieve the error message.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> class with the specified error message.</summary>
      <param name="errorMessage">A non-localizable error message.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage">
      <summary>Gets or sets the non-localizable error message to display when validation fails.</summary>
      <returns>The non-localizable error message.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName">
      <summary>Gets or sets the property name on the resource type that provides the localizable error message.</summary>
      <returns>The property name on the resource type that provides the localizable error message.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType">
      <summary>Gets or sets the resource type that provides the localizable error message.</summary>
      <returns>The resource type that provides the localizable error message.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString">
      <summary>Gets the localized or non-localized error message.</summary>
      <returns>The localized or non-localized error message.</returns>
      <exception cref="T:System.InvalidOperationException">Both <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName" /> and <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage" /> are set.-or-Neither <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName" /> nor <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage" /> is set.-or-Either <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName" /> or <see cref="P:System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType" /> is set, but the other is not.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)">
      <summary>Applies formatting to the error message.</summary>
      <returns>The formatted error message.</returns>
      <param name="name">The name to include in the formatted error message.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Determines whether the specified object is valid and returns an object that includes the results of the validation check.</summary>
      <returns>
        <see cref="F:System.ComponentModel.DataAnnotations.ValidationResult.Success" /> if the value is valid; otherwise, an instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> class with the error message.</returns>
      <param name="value">The object to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validationContext" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Determines whether the specified object is valid.</summary>
      <returns>true if <paramref name="value" /> is valid; otherwise, false.</returns>
      <param name="value">The object to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <exception cref="T:System.NotImplementedException">The <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> method is not overridden in the derived class.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Determines whether the specified object is valid and throws a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> if the object is not valid.</summary>
      <param name="value">The object to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validationContext" /> is null.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
        <paramref name="value" /> is not valid.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationContext">
      <summary>Provides information about a type or member to validate.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> class with the specified object to validate.</summary>
      <param name="instance">The object to validate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> class with the specified object to validate and a collection of values related to validation.</summary>
      <param name="instance">The object to validate.</param>
      <param name="items">A collection of values related to validation. This value can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> class with the specified object to validate, a service provider that enables validation methods to access external services, and a collection of values related to validation.</summary>
      <param name="instance">The object to validate.</param>
      <param name="serviceProvider">A service provider that enables validation methods to access external services. This value can be null.</param>
      <param name="items">A collection of values related to validation. This value can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName">
      <summary>Gets or sets the name to display to users for the member to validate.</summary>
      <returns>The name of member to validate.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)">
      <summary>Retrieves an instance of the service to use during validation.</summary>
      <returns>An instance of that service or null if the service is not available.</returns>
      <param name="serviceType">The type of the service to use during validation.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})">
      <summary>Initializes the <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> with a service provider that can return service instances of the specified type when the <see cref="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)" /> method is called. </summary>
      <param name="serviceProvider">A service provider that can return service instances of the specified type when <see cref="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)" /> is called. If <paramref name="serviceProvider" /> is null, <see cref="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)" /> will always return null. </param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.Items">
      <summary>Gets the collection of values associated with the validation request.</summary>
      <returns>The collection of values associated with the validation request</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName">
      <summary>Gets or sets the programmatic name of the member to validate.</summary>
      <returns>The programmatic name of the member to validate.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance">
      <summary>Gets the object to validate.</summary>
      <returns>The object to validate.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType">
      <summary>Gets the type of the object to validate.</summary>
      <returns>The type of the object to validate.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationException">
      <summary>Represents the exception that occurred during validation of a member that is marked with a validation attribute.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> class with the specified validation result, the attribute that triggered the exception, and the invalid value.</summary>
      <param name="validationResult">An object containing information about the validation error.</param>
      <param name="validatingAttribute">The attribute that caused the validation exception.</param>
      <param name="value">The value that caused the validating attribute to trigger the exception.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> class with the specified error message. </summary>
      <param name="message">The localized message describing the exception.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> class with the specified error message, the attribute that triggered the exception, and the invalid value.</summary>
      <param name="errorMessage">The localized message describing the exception.</param>
      <param name="validatingAttribute">The attribute that caused the validation exception.</param>
      <param name="value">The value that caused the validating attribute to trigger the exception.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> class with the specified error message and an inner exception.</summary>
      <param name="message">The localized message describing the exception.</param>
      <param name="innerException">The object representing an exception that caused the current validation exception.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute">
      <summary>Gets the validation attribute that caused the validation exception.</summary>
      <returns>The validation attribute that caused the validation exception.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult">
      <summary>Gets the object containing information about the validation error.</summary>
      <returns>This object containing information about the validation error.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationException.Value">
      <summary>Gets the value that caused the validating attribute to trigger the exception.</summary>
      <returns>The value that caused the validating attribute to trigger the exception.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.ValidationResult">
      <summary>Contains the results of a validation request. </summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> class with the specified error message. </summary>
      <param name="errorMessage">The error message to display to the user. If null, the <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> method uses the <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)" /> method to create the error message.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> class with the specified error message and a collection of member names that are associated with the validation result. </summary>
      <param name="errorMessage">The error message to display to the user. If null, the <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> method uses the <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)" /> method to create the error message.</param>
      <param name="memberNames">The collection of member names associated with the validation result. If empty, <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> will construct this list from the <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName" /> property. </param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage">
      <summary>Gets or sets the error message for the validation result.</summary>
      <returns>The error message for the validation result.</returns>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames">
      <summary>Gets the collection of member names associated with the validation result.</summary>
      <returns>The collection of member names associated with the validation result.</returns>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.ValidationResult.Success">
      <summary>A value that indicates the entity member successfully validated.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.ValidationResult.ToString">
      <summary>Returns a string value that represents the current validation result.</summary>
      <returns>A string value that represents the current validation result.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Validator">
      <summary>Provides members to help validate objects and members using values from the associated <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> attribute.</summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary>Determines whether the specified object is valid.</summary>
      <returns>true if the object is valid; otherwise, false.</returns>
      <param name="instance">The object to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <param name="validationResults">A collection to store validation results.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="instance" /> does not equal the <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> on <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)">
      <summary>Determines whether the specified object is valid and, if requested, validates all of the properties of the object.</summary>
      <returns>true if the object is valid; otherwise, false.</returns>
      <param name="instance">The object to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <param name="validationResults">A collection to store validation results.</param>
      <param name="validateAllProperties">A value that indicates whether all immediate properties of the object are validated.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="instance" /> does not equal the <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> on <paramref name="validationContext" />.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})">
      <summary>Determines whether the specified property value is valid.</summary>
      <returns>true if the property is valid; otherwise, false.</returns>
      <param name="value">The value to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <param name="validationResults">A collection to store validation results.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName" /> of <paramref name="validationContext" /> is not a valid property.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary>Determines whether a specified value is valid against a collection of validation attributes.</summary>
      <returns>true if <paramref name="value" /> is valid against the validation attributes; otherwise, false.</returns>
      <param name="value">The value to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <param name="validationResults">A collection to store validation results.</param>
      <param name="validationAttributes">The collection of validation attributes to use to determine if <paramref name="value" /> is valid.</param>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Determines whether the specified object is valid and throws a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> if the object is not valid.</summary>
      <param name="instance">The object to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> is null.-or-<paramref name="validationContext" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="instance" /> does not equal the <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> on <paramref name="validationContext" />.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
        <paramref name="instance" /> is not valid.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)">
      <summary>Determines whether the specified object is valid and, if requested, whether all of the properties on the object are valid, and throws a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> if the object is not valid.</summary>
      <param name="instance">The object to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <param name="validateAllProperties">A value that indicates whether all immediate properties of the object are validated.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> is null.-or-<paramref name="validationContext" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="instance" /> does not equal the <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance" /> on <paramref name="validationContext" />.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
        <paramref name="instance" /> or at least one of its properties is not valid.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Determines whether the specified property value is valid and throws a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> if the property is not valid.</summary>
      <param name="value">The value to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName" /> of <paramref name="validationContext" /> is not a valid property.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
        <paramref name="value" /> is not valid.</exception>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})">
      <summary>Determines whether a specified value is valid against a collection of validation attributes and throws a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> if the value is not valid.</summary>
      <param name="value">The value to validate.</param>
      <param name="validationContext">An object that contains information about the validation request.</param>
      <param name="validationAttributes">The collection of validation attributes to use to determine if <paramref name="value" /> is valid.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validationContext" /> is null.</exception>
      <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
        <paramref name="value" /> is not valid.</exception>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute">
      <summary>Specifies how the database generates values for a property. </summary>
    </member>
    <member name="M:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute" /> class.</summary>
      <param name="databaseGeneratedOption">The pattern used to generate values for the property in the database.</param>
    </member>
    <member name="P:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.DatabaseGeneratedOption">
      <summary>Gets the pattern used to generate values for the property in the database. </summary>
      <returns>The pattern used.</returns>
    </member>
    <member name="T:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption">
      <summary>The pattern used to generate values for a property in the database. </summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None">
      <summary>The database does not generate values. </summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity">
      <summary>The database generates a value when a row is inserted. </summary>
    </member>
    <member name="F:System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed">
      <summary>The database generates a value when a row is inserted or updated. </summary>
    </member>
  </members>
</doc>